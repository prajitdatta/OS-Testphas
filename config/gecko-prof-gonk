mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/objdir-prof-gonk

# XXX our build system doesn't seem to respect toplevel -j ...
# hard-coding this sucks
mk_add_options MOZ_MAKE_FLAGS="-s $MAKE_FLAGS"

# XXX need a plan for toolchain and multi-dev-platform support
gonk="$GONK_PATH"
sys=`uname -s | tr "[[:upper:]]" "[[:lower:]]"`

ac_add_options --target=arm-android-eabi
ac_add_options --with-gonk="$gonk"
ac_add_options --with-gonk-toolchain-prefix="$TARGET_TOOLS_PREFIX"
ac_add_options --with-endian=little

ac_add_options --enable-application=b2g
ac_add_options --disable-elf-hack

ac_add_options --enable-debug-symbols
ac_add_options --enable-profiling
ac_add_options --with-ccache
ac_add_options --enable-marionette

# The way we use jemalloc with bionic causes two heaps to be created,
# and external-to-gecko dso's end up using the bionic malloc.  This is
# a never-ending source of mismatched allocator pain.  Until we figure
# out a way to fully replace malloc/free (possibly by integrating
# jemalloc into bionic), just use bionic malloc.
ac_add_options --disable-jemalloc

if [ "$HOST_OS" != "linux" ]; then
ac_add_options --disable-crashreporter
fi

ac_add_options --enable-updater
#ac_add_options --enable-update-channel=nightly
ac_add_options --enable-update-packaging

ac_add_options --enable-omx-plugin

# Enable dump() from JS.
export CXXFLAGS="-DMOZ_ENABLE_JS_DUMP $EXTRA_INCLUDE"
